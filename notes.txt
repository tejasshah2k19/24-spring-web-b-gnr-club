core 
bean
context 
el 

1) spring web -> {4} 
2) boot devtools 

jsp -> 

	folders 
	jar/lib 
	
step1:	
	1) create webapp folder inside src/main
	2) create WEB-INF inside webapp 
	3) create views inside WEB-INF 
	
step2:	
	configuration -> ioc container ->jsp -> folders 
	
	application.properties 
	where -> src/main/resources/
	
	spring.mvc.view.prefix=/WEB-INF/views/
	spring.mvc.view.suffix=.jsp 
	
	
step3: 
	add jsp lib in project { pom.xml } 
	tomcat embeded jasper maven 
	
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
	
------------------------------------------------------------------------------------------------	

com -> controller 


LoginServlet
SignupServlet
ForgetPasswordServlet 



how to create spring controller? 
	-create a class inside controller folder 
	-class level annotation - @Controller 



----------------------------------------------------------------------------------------------

create jsp Signup.jsp -> run 

how to change server port -> 
	application.properties 
			server.port=9999

----------------------------------------------------------------------------------------------

for jsp we need tomcat-embeded-jasper 

which folder we need to create for jsp ? 
webapp->WEB-INF->views 

configuration->application.properties 

->server 7777 -> 
		server.port=7777
		
-> how to create a controller in spring web ? 
	1)class inside controller folder
	2)use @Controller at class level  		

->can we run jsp directly in spring ? 
	No 

->we create a method in controller to open jsp 
		@Getmappting("/signup")
			->return "Signup" 
			

->			
-----------------------------------------------------------------------------------------




NewBook.jsp ->
	title
	authorName
	price
	category 
				submit -> 
				
url -> read -> validation -> db insert => 

-----------------------------------------------------------------------------------------
			

Model -> spring.ui -> 


-------------------------------------
spring + database 

step 1 : add dep / pom.xml 
		project -> right click -> spring -> add:edit starters 
				1)mysql 
				2)spring data jdbc 
				
step 2: application.properties 
			spring.datasource.url 
			spring.datasource.username
			spring.datasource.password 
			
-------------------------------------


PreparedStatement -> query -> executeUpdate() 

		
		
JdbcTemplate -> 
@Autowired 
			
			
			
		//update()-> insert update delete :: sql 

 create table products ( 
	 productId int primary key auto_increment,
	 productName varchar(40),
	 category varchar(40),
	 price int
 );
 





-------------------------------------
spring -> db connection 

step1: 
	jar -> lib -> pom.xml 
		1) mysql/oracle/pg/
		2) spring data jdbc 
		

step2: 
	application.properties 
	url 
	userName
	password 
	
-------------------------------------------

query->run->
JdbcTemplate -->spring 


-----------------------------------------------

file uploading -> image . audio . video . pdf excel 



step1 : lib / jar / dep -> pom.xml 
	1)fileupload
	2)io
	google 
		 

step2: upload file -> form -> 
			method:post
			encType:multipart/form-data
			input type:file 
			
step3: read server -> paste 
	database?    path 
	server folder ?
	cloud ? static->
	
	






























